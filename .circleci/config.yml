version: 2.1

executors:
  rails_container:
    docker:
      - image: circleci/ruby:2.7.1-node
        environment:
          RAILS_ENV: test
          # BUNDLE_JOBS: 4
          # BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          # BUNDLE_BUILD__MYSQL2: --with-ldflags=-L/usr/local/opt/openssl/lib
          # BUNDLER_VERSION: 2.2.26
          INITIAL_USER1_USERNAME: 中村謙一
          INITIAL_USER1_USERID: ken10806
          INITIAL_USER1_EMAIL: test_user_1@test.com
          INITIAL_USER1_BIO: Pllizmの開発者です。
          INITIAL_USER1_PASSWORD: password
          INITIAL_USER2_USERNAME: 岡田准
          INITIAL_USER2_USERID: jun_okada
          INITIAL_USER2_EMAIL: test_user_2@test.com
          INITIAL_USER2_BIO: ジブリが好きです。
          INITIAL_USER2_PASSWORD: password
      - image: circleci/mysql:5.7
        environment:
          # MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
    working_directory: ~/pllizm

# commands:
#   install_bundler:
#     description: Bundler install
#     steps:
#       - run: gem install bundler -v 2.2.26

# orbs:
#   aws-ecr: circleci/aws-ecr@6.12.2
#   aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  fetch_source_code:
    executor:
      name: rails_container
    steps:
      - checkout
      - restore_cache:
          keys:
            - source-v1.3-{{ .Branch }}-{{ .Revision }}
            - source-v1.3-{{ .Branch }}-
            - source-v1.3-
      - save_cache:
          key: source-v1.3-{{ .Branch }}-{{ .Revision }}
          name: source-code
          paths:
            - ~/pllizm

  bundle_dependencies:
    executor:
      name: rails_container
    steps:
      - restore_cache:
          key: source-v1.3-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - dependencies-v1.3-{{ checksum "server/Gemfile.lock" }}
            - dependencies-v1.3-
      - run:
          name: Install libssl
          command: |
            sudo apt-get update
            sudo apt-get install libssl1.0.0 libssl-dev
      - run:
          name: Bundle Install Dependencies
          working_directory: server
          command: |
            bundle install
      - save_cache:
          key: dependencies-v1.3-{{ checksum "server/Gemfile.lock" }}
          paths:
            - server/vendor/bundle

  rspec:
    executor:
      name: rails_container
    steps:
      - restore_cache:
          key: source-v1.3-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependencies-v1.3-{{ checksum "server/Gemfile.lock" }}
      - run:
          name: Waiting stand up database
          working_directory: server
          command: |
            dockerize -wait \
            tcp://127.0.0.1:3306 -timeout 120s
      # Database setup
      - run:
          name: Create database.yml for circleci
          command: mv ./server/config/database.yml.ci ./server/config/database.yml
      - run:
          command: |
            bundle exec gem uninstall mysql2
          working_directory: server
      - run:
          command: |
            bundle install
          working_directory: server
      - run:
          name: Setup database
          command: |
            bundle exec rails db:create
            bundle exec rails db:migrate
          working_directory: server
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            mkdir -p ~/rspec
            TEST_FILES="$(circleci tests glob \"spec/**/*_spec.rb\" | circleci tests split --split-by=timings)"
            bundle exec rspec --require rails_helper \
                              --color \
                              --format progress \
                              --format RspecJunitFormatter \
                              --out ~/rspec/rspec.xml
          working_directory: server
      # collect reports
      - store_test_results:
          path: ~/server/rspec
      - store_artifacts:
          path: ~/server/tmp/test-results
          destination: test-results

  rubocop:
    executor:
      name: rails_container
    steps:
      - restore_cache:
          key: source-v1.3-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: dependencies-v1.3-{{ checksum "server/Gemfile.lock" }}
      # - install_bundler
      - run:
          command: |
            bundle install
          working_directory: server
      - run:
          name: Execute rubocop
          working_directory: server
          command: |
            bundle exec rubocop

  lint:
    working_directory: ~/pllizm
    docker:
      - image: circleci/node:14.17.0
    steps:
      - restore_cache:
          key: source-v1.3-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
          - client-dependencies-v1.3-{{ checksum "client/yarn.lock" }}
          - client-dependencies-v1.3-
      - run:
          command: yarn install
          working_directory: client
      - save_cache:
          paths:
            - node_modules
          key: client-dependencies-v1.3-{{ checksum "client/yarn.lock" }}
      - run:
          command: yarn lint
          working_directory: client

  # build_and_push_image_server:
  #   machine:
  #     image: ubuntu-1604:201903-01
  #   steps:
  #     - checkout
  #     - aws-ecr/build-and-push-image:
  #         account-url: AWS_ACCOUNT_URL
  #         repo: "pllizm_server"
  #         region: AWS_REGION
  #         tag: "${CIRCLE_SHA1}"
  #         path: ./server/

  # build_and_push_image_web:
  #   machine:
  #     image: ubuntu-1604:201903-01
  #   steps:
  #     - checkout
  #     - aws-ecr/build-and-push-image:
  #         account-url: AWS_ACCOUNT_URL
  #         repo: "pllizm_web"
  #         region: AWS_REGION
  #         tag: "${CIRCLE_SHA1}"
  #         path: ./nginx/

workflows:
  build:
    jobs:
      - fetch_source_code
      - bundle_dependencies:
          requires:
            - fetch_source_code
      - rubocop:
          requires:
            - bundle_dependencies
      - rspec:
          requires:
            - bundle_dependencies
      - lint:
          requires:
            - fetch_source_code
      # - build_and_push_image_server:
      #     requires:
      #       - rubocop
      #       - rspec
      #     filters:
      #       branches:
      #         only: master
      # - build_and_push_image_web:
      #     requires:
      #       - rubocop
      #       - rspec
      #     filters:
      #       branches:
      #         only: master
      # - aws-ecs/deploy-service-update:
      #     requires:
      #       - build_and_push_image_server
      #     family: "yomukatsu-task-def"
      #     service-name: "yomukatsu-service"
      #     cluster-name: "yomukatsu-cluster"
      #     container-image-name-updates: "container=rails,tag=${CIRCLE_SHA1}"
      #     filters:
      #       branches:
      #         only: master
      # - aws-ecs/deploy-service-update:
      #     requires:
      #       - build_and_push_image_web
      #     family: "yomukatsu-task-def"
      #     service-name: "yomukatsu-service"
      #     cluster-name: "yomukatsu-cluster"
      #     container-image-name-updates: "container=nginx,tag=${CIRCLE_SHA1}"
      #     filters:
      #       branches:
      #         only: master
